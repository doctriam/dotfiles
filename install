#!/bin/bash
# Installer for dotfiles initializers


# -------------- Install Dotfiles/RCs -----------------------------------------
echo "#-------------- Dotfiles/RCs------------------------------------------\n"
BASHRC=/$HOME/.bashrc
BASHALIAS=/$HOME/.bash_aliases
VIMRC=/$HOME/.vimrc
TERMINALRC=/$HOME/.config/xfce4/terminal/terminalrc

if [ -f "$BASHRC"  ]; then
    rm $BASHRC -v
fi

if [ -f "$BASHALIAS"  ]; then
    rm $BASHALIAS -v
fi

if [ -f "$VIMRC"  ]; then
    rm $VIMRC -v
fi

if [ -f "$TERMINALRC"  ]; then
    rm $TERMINALRC -v
fi

ln -s $HOME/dotfiles/.bashrc $BASHRC -v
ln -s $HOME/dotfiles/.bash_aliases $BASHALIAS -v
ln -s $HOME/dotfiles/terminalrc $TERMINALRC -v
ln -s $HOME/dotfiles/.vimrc $VIMRC -v
echo "#----------END: Dotfiles/RCs------------------------------------------\n"
# -----------------------------------------------------------------------------

# -------------- Pacman: Install Recommended Software -------------------------
echo "#-------------- Pacman: Install Recommended Software------------------\n"
packages=(
awesome
blueman
brave
cmake
git
i3lock
imagemagick
scrot
sddm
thunar
viewnior
vim
xclip
xfce4-terminal
)

for pkg in "${packages[@]}"
do {
        if sudo pacman -Qi $pkg > /dev/null 2>&1 ; then
            echo -en "$pkg already installed\n"
        else
            echo -en "Installing $pkg...\n"
            sudo pacman -S $pkg --noconfirm > /dev/null
            if pacman -Qi $pkg > /dev/null 2>&1
            then
                echo -en "$pkg is now installed\n"
            else
                echo -en "Installing $pkg FAILED\n"
                deps = 1
            fi
        fi
}
done
[[ $deps -ne 1  ]] && echo -en "\nSoftware installation complete\n" || { 
    echo -en "\nCheck for FAILED packages\n";exit 1; 
}
echo "#----------END: Install From Pacman-----------------------------------\n"
echo -en "\n"
# -----------------------------------------------------------------------------


# -------------- Github: Install Recommended Repos ----------------------------
echo "#-------------- Github: Install Recommended Repos --------------------\n"
    # Roku CLI
sudo rm -r roku-cli -f -v
git clone https://github.com/ncmiller/roku-cli.git
cd roku-cli
sudo python setup.py install
cd ..
sudo rm -r roku-cli -f -v

    # SDDM Theme
rm -r abstractdark
git clone https://github.com/3ximus/abstractdark-sddm-theme abstractdark
rm abstractdark/Main.qml -v
cp $HOME/dotfiles/sddm/Main.qml abstractdark/Main.qml -v
sudo rm -r /usr/share/sddm/themes/abstractdark -v
sudo mv abstractdark /usr/share/sddm/themes/abstractdark -v
sudo rm /etc/sddm.conf -v
sudo cp $HOME/dotfiles/sddm/sddm.conf /etc/sddm.conf -v
echo "#----------END: Install From Github-----------------------------------\n"
echo -en "\n"
# -----------------------------------------------------------------------------


# -------------- Install Awesome WM Config ------------------------------------
echo "#-------------- Install Awesome WM Profile ---------------------------\n"
AWESOMERC=$HOME/.config/awesome/rc.lua
if [ -f "$AWESOMERC" ]; then
    echo -en "\nAwesome WM profile already installed\n"
else
    git clone https://github.com/doctriam/awesomerc ~/.config/awesome
    rm -r ~/.config/awesome/calendar -f -v
    rm -r ~/.config/awesome/volume-control -f -v
    git clone https://github.com/deficient/calendar ~/.config/awesome/calendar
    git clone https://github.com/deficient/volume-control ~/.config/awesome/volume-control
fi
echo "#----------END: Install Awesome WM Profile ---------------------------\n"
# -----------------------------------------------------------------------------

